
</div> <!-- End App-->
</div> <!-- End Root -->

<link href="/static/css/main.15f091f2.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/components/icon.min.css"
    integrity="sha256-i/WrZ2D8ZxzJCLLDAysc3dTp6ep1oU4khp0mk9ze0uI=" crossorigin="anonymous">
<link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"
    integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/showdown/1.8.6/showdown.min.js"
    integrity="sha256-dwhppIrxD8qC6lNulndZgtIm4XBU9zoMd9OUoXzIDAE=" crossorigin="anonymous"></script>
<script src="static/js/typed.min.js" type="text/javascript"></script>
<noscript>
    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NK46QBJ" height="0" width="0"
        style="display:none;visibility:hidden"></iframe>
</noscript>

<script type="text/javascript">
    // Check TN referer
    url = new URL(window.location.href);

    if (url.searchParams.get('technuttyredirect')) {
        alert('Hey! I see that you have come for my old site TechNutty. Sorry to say but I no longer run that.');
    };

    // Create cookie function
    function createCookie(name, value, days) {
        var expires;
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toGMTString();
        }
        else {
            expires = "";
        }
        document.cookie = name + "=" + value + expires + "; path=/";
    }

    // Reading cookies function
    function readCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) === ' ') {
                c = c.substring(1, c.length);
            }
            if (c.indexOf(nameEQ) === 0) {
                return c.substring(nameEQ.length, c.length);
            }
        }
        return null;
    }

    var hasCookie = readCookie("visited");

    // Create cookie notification
    const doNotTrackEnabled = () => {
        return window.doNotTrack == "1" ||
            navigator.doNotTrack == "yes" ||
            navigator.doNotTrack == "1" ||
            navigator.msDoNotTrack == "1" ||
            (
                typeof window.external === 'object' &&
                typeof window.external.msTrackingProtectionEnabled === 'function' &&
                typeof window.external.msTrackingProtectionEnabled()
            )
    }

    const cookieMessage = document.querySelector('.js-cookie-message');

    if (!doNotTrackEnabled()) {
        console.log('you has dnt')
        if (!hasCookie) {
            console.log('you do not has cookie or dnt')
            cookieMessage.removeAttribute('hidden');
        }
    }

    cookieMessage.addEventListener("click", (el) => {
        if (el.target.nodeName === 'BUTTON') {
            console.log('hiding cookie message now')
            cookieMessage.setAttribute('hidden', true);
            createCookie("visited", true, 365);
        }
    });

    function ScrollToElement(ele) {
        var pageHeaderScrollHeight = "120";

        if (ele.length) {
            jQuery('html,body').animate({
                scrollTop: jQuery(ele).offset().top - pageHeaderScrollHeight
            }, 750);
        }
    }

    activateAtY = 20;

    $(window).scroll(function () {
        if ($(window).scrollTop() > activateAtY) {
            //console.log($(window).scrollTop() + ' ' + activateAtY)
            jQuery('body').addClass('scrolled');
        } else {
            jQuery('body').removeClass('scrolled');
        }
    });

    var typed = new Typed("#typed", {
        stringsElement: '#typed-strings',
        typeSpeed: 0,
        backSpeed: 0,
        backDelay: 1500,
        startDelay: 1000,
        loop: false,
        smartBackspace: true,
        onComplete: (self) => {
            typedDelayTimeout()
        },
    });

    function typedDelayInit() {
        var typed = new Typed("#typed", {
            stringsElement: '#typed-strings-delay',
            typeSpeed: 0,
            backSpeed: 0,
            backDelay: 3000,
            startDelay: 1000,
            showCursor: false,
            onComplete: (self) => {
                secondTypedDelayTimeout()
            },
        });
    }

    function defaultTypedDelayInit() {
        var typed = new Typed("#typed", {
            stringsElement: '#default-typed-strings',
            typeSpeed: 0,
            backSpeed: 0,
            backDelay: 1500,
            startDelay: 1000,
            showCursor: false,
        });
    }

    function typedDelayTimeout() {
        jQuery('.scroll-down').fadeIn("slow", function () { });

        if (!$('body').hasClass('scrolled')) {
            setTimeout(typedDelayInit, 5000);
        } else {
            setTimeout(defaultTypedDelayInit, 2500);
        }
    }

    function secondTypedDelayInit() {
        var typed = new Typed("#typed", {
            stringsElement: '#second-typed-strings-delay',
            typeSpeed: 0,
            backSpeed: 0,
            backDelay: 1500,
            startDelay: 1000,
            showCursor: false,
            onComplete: (self) => {
                thirdTypedDelayTimeout()
            },
        });
    }

    function secondTypedDelayTimeout() {
        setTimeout(secondTypedDelayInit, 2500);
    }

    function thirdTypedDelayInit() {
        var typed = new Typed("#typed", {
            stringsElement: '#third-typed-strings-delay',
            typeSpeed: 0,
            backSpeed: 0,
            backDelay: 1500,
            startDelay: 1000,
            showCursor: false,
        });
    }

    function thirdTypedDelayTimeout() {
        if (!$('body').hasClass('scrolled')) {
            setTimeout(ScrollToElement('.App-content'), 250);
            setTimeout(thirdTypedDelayInit, 300);
        } else {
            setTimeout(defaultTypedDelayInit, 0);
        }
    }

    window.addEventListener("DOMContentLoaded", function (event) {

        (function ($) {
            jQuery('#OpeningContentWrapper').append(
                '<div id="OpeningContentSocial">' +
                '<a target="_blank" href="https://github.com/nicholasgriffintn" rel="noopener" title="Github" class="social-icon-wrap" id="GithubLinkWrap">' +
                '<i class="github icon"></i>' +
                '</a>' +
                '<a target="_blank" href="https://twitter.com/NGriffintn" rel="noopener" title="Twitter" class="social-icon-wrap" id="TwitterLinkWrap">' +
                '<i class="twitter icon"></i>' +
                '</a>' +
                '<a target="_blank" href="https://www.linkedin.com/in/nicholasgriffin-gb/" rel="noopener" title="LinkedIn" class="social-icon-wrap" id="LinkedinLinkWrap">' +
                '<i class="linkedin icon"></i>' +
                '</a>' +
                '</div>');

            function queryLastfm(reload) {

                // Set the request URL for Last.fm
                var lastfm_request_url =
                    'https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=NGriiffin&api_key=c91dd1f9b8fcf710e36a2a48c6c493a8&limit=10&format=json';

                $.ajax({
                    method: "GET",
                    url: lastfm_request_url,
                    contentType: "application/json",
                    crossDomain: true,
                    success: function (respData) {
                        //console.log('data', respData);
                        getSpotifyData(respData, reload);
                    },
                    error: function (err) {
                        console.error(err);
                    }
                });
            }

            function getSpotifyData(data, reload) {
                var tracks = data.recenttracks.track;

                //console.log(tracks);

                customSpotifyWidgetContainer = document.getElementById('spotify-widget');

                if (reload != true) {
                    customSpotifyWidgetContainer.innerHTML = '';
                    // refresh song list
                    setTimeout(queryLastfm, 60000);
                }

                var customSpotifyRight = document.createElement('div');
                customSpotifyRight.id = 'customSpotifyRight';
                customSpotifyRight.className = 'sixteen wide tablet sixteen wide computer column';

                customSpotifyWidgetContainer.appendChild(customSpotifyRight);

                var customSpotifyLeft = document.createElement('div');
                customSpotifyLeft.id = 'customSpotifyLeft';
                customSpotifyLeft.className = 'sixteen wide tablet sixteen wide computer column';

                customSpotifyWidgetContainer.appendChild(customSpotifyLeft);

                $trackNumber = 0;

                customSpotifyLeftElement = document.getElementById('customSpotifyLeft');

                customSpotifyRightElement = document.getElementById('customSpotifyRight');

                var customSpotifyLeftElementSongWrapper = document.createElement('div');
                customSpotifyLeftElementSongWrapper.id = 'customSpotifyLeftElementSongWrapper';

                customSpotifyLeftElement.appendChild(customSpotifyLeftElementSongWrapper);

                tracks.forEach(function (element) {
                    console.log(element);


                    if (element['@attr']) {
                        trackNowPlaying = element['@attr'].nowplaying;
                    } else {
                        trackNowPlaying = false
                    }
                    trackAlbumName = element.album['#text'];
                    trackArtistName = element.artist['#text'];

                    trackImageSmall = element.image[0]['#text'];
                    trackImageMedium = element.image[1]['#text'];
                    trackImageLarge = element.image[2]['#text'];
                    trackImageExtraLarge = element.image[3]['#text'];

                    trackName = element.name;
                    trackUrl = element.url;

                    //console.log(trackNowPlaying);

                    if ($trackNumber == '0') {
                        var customSpotifyRightElementSongWrapper = document.createElement('div');
                        customSpotifyRightElementSongWrapper.id =
                            'customSpotifyRightElementSongWrapper';

                        var customSpotifyRightElementSongContainer = document.createElement(
                            'div');
                        customSpotifyRightElementSongContainer.id =
                            'customSpotifyRightElementSongContainer';
                        customSpotifyRightElementSongContainer.style.backgroundImage = 'url(' +
                            trackImageExtraLarge + ')';

                        customSpotifyRightElementSongWrapper.appendChild(
                            customSpotifyRightElementSongContainer);

                        var customSpotifyRightElementSongOverlay = document.createElement('div');
                        customSpotifyRightElementSongOverlay.id =
                            'customSpotifyRightElementSongOverlay';

                        var customSpotifyRightElementSongOverlayContent = document.createElement(
                            'div');
                        customSpotifyRightElementSongOverlayContent.id =
                            'customSpotifyRightElementSongOverlayContent';

                        customSpotifyRightElementSongOverlayContent.innerHTML = '<h3>' +
                            trackName +
                            '</h3>' +
                            '<span>' +
                            trackArtistName +
                            '</span>' +
                            '<span>' +
                            trackAlbumName +
                            '</span>' +
                            '<a class="trackLinkPlay" rel="noopener nofollow" target="_blank" href="' +
                            trackUrl +
                            '">' +
                            '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 60"><path d="M45.563 29.174l-22-15A1 1 0 1 0 22 15v30a.999.999 0 0 0 1.563.826l22-15a1 1 0 0 0 0-1.652zM24 43.107V16.893L43.225 30 24 43.107z"/><path d="M30 0C13.458 0 0 13.458 0 30s13.458 30 30 30 30-13.458 30-30S46.542 0 30 0zm0 58C14.561 58 2 45.439 2 30S14.561 2 30 2s28 12.561 28 28-12.561 28-28 28z"/></svg>' +
                            '</a>';

                        customSpotifyRightElementSongOverlay.appendChild(
                            customSpotifyRightElementSongOverlayContent);

                        if (trackNowPlaying) {
                            var nowPlayingOverlay = document.createElement('div');
                            nowPlayingOverlay.id = 'nowPlayingOverlay';

                            nowPlayingOverlay.innerHTML = '<span>Now Playing</span>';

                            customSpotifyRightElementSongOverlay.appendChild(nowPlayingOverlay);
                        }

                        customSpotifyRightElementSongWrapper.appendChild(
                            customSpotifyRightElementSongOverlay);

                        customSpotifyRightElement.appendChild(
                            customSpotifyRightElementSongWrapper);
                    } else {
                        var customSpotifyLeftElementSong = document.createElement('div');
                        customSpotifyLeftElementSong.className = 'leftSideSong ui grid';

                        var customSpotifyLeftElementSongHTML =
                            '<a rel="noopener nofollow" target="_blank" class="trackLinkFloat" href="' +
                            trackUrl +
                            '"></a>' +
                            '<div class="four wide  column">' +
                            '<img src="' +
                            trackImageSmall +
                            '">' +
                            '</div>' +
                            '<div class="twelve wide column">' +
                            '<h3>' +
                            trackName +
                            '</h3>' +
                            '<span>' +
                            trackArtistName +
                            '</span>' +
                            '<span>' +
                            trackAlbumName +
                            '</span>' +
                            '</div>';

                        customSpotifyLeftElementSong.innerHTML =
                            customSpotifyLeftElementSongHTML;

                        customSpotifyLeftElementSongWrapper.appendChild(
                            customSpotifyLeftElementSong)
                    }

                    $trackNumber++;

                });

            }

            // refresh song list
            setTimeout(queryLastfm, 60000);

            // Get song list on load
            queryLastfm(true);

        })(jQuery);
    });
</script>

</body>

</html>